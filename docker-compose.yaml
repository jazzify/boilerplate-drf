services:
  mongo:
    image: mongo:6.0.20
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_password
      MONGO_INITDB_DATABASE: project1
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo/conf.d/mongod.conf:/etc/mongod.conf
    command: ["mongod", "--config", "/etc/mongod.conf"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  db:
    image: mysql:8.4
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    env_file:
      - .env
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}", "-e", "SELECT 1"]
      timeout: 20s
      retries: 10

  web:
    build:
      context: .
      target: builder
    command: >
      sh -c "
        cd /code
        uv sync
        uv run python -Werror manage.py collectstatic --noinput
        uv run python -Werror manage.py migrate
        uv run python manage.py runserver 0.0.0.0:8000;
      "
    volumes:
      - /code/.venv
      - ./:/code
    environment:
      - DJANGO_SETTINGS_MODULE=django_project.settings.local
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy

volumes:
  mysql_data:
  mongodb_data:
